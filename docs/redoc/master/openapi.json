{
  "openapi": "3.0.3",
  "info": {
    "title": "Solvio API",
    "description": "API description for Solvio vector search engine.\n\n\nThis document describes CRUD and search operations on collections of points (vectors with payload).\n\n\nSolvio supports any combinations of `should`, `must` and `must_not` conditions,\nwhich makes it possible to use in applications when object could not be described solely by vector.\nIt could be location features, availability flags, and other custom properties businesses should take into account.\n\n## Examples\n\nThis examples cover the most basic use-cases - collection creation and basic vector search.\n\n### Create collection\n\nFirst - let's create a collection with dot-production metric.\n\n```\n\ncurl -X PUT 'http://localhost:6333/collections/test_collection' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n    \"vectors\": {\n    \"size\": 4,\n    \"distance\": \"Dot\"\n    }\n}'\n\n```\n\nExpected response:\n\n```\n\n{\n    \"result\": true,\n    \"status\": \"ok\",\n    \"time\": 0.031095451\n}\n\n```\n\nWe can ensure that collection was created:\n\n```\n\ncurl 'http://localhost:6333/collections/test_collection'\n\n```\n\nExpected response:\n\n```\n\n{\n\"result\": {\n    \"status\": \"green\",\n    \"vectors_count\": 0,\n    \"segments_count\": 5,\n    \"disk_data_size\": 0,\n    \"ram_data_size\": 0,\n    \"config\": {\n    \"params\": {\n        \"vectors\": {\n        \"size\": 4,\n        \"distance\": \"Dot\"\n        }\n    },\n    \"hnsw_config\": {\n        \"m\": 16,\n        \"ef_construct\": 100,\n        \"full_scan_threshold\": 10000\n    },\n    \"optimizer_config\": {\n        \"deleted_threshold\": 0.2,\n        \"vacuum_min_vector_number\": 1000,\n        \"max_segment_number\": 5,\n        \"memmap_threshold\": 50000,\n        \"indexing_threshold\": 20000,\n        \"flush_interval_sec\": 1\n    },\n    \"wal_config\": {\n        \"wal_capacity_mb\": 32,\n        \"wal_segments_ahead\": 0\n    }\n    }\n},\n\"status\": \"ok\",\n\"time\": 2.1199e-05\n}\n\n```\n\n\n### Add points\n\nLet's now add vectors with some payload:\n\n```\n\ncurl -L -X PUT 'http://localhost:6333/collections/test_collection/points?wait=true' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n\"points\": [\n    {\"id\": 1, \"vector\": [0.05, 0.61, 0.76, 0.74], \"payload\": {\"city\": \"Berlin\"}},\n    {\"id\": 2, \"vector\": [0.19, 0.81, 0.75, 0.11], \"payload\": {\"city\": [\"Berlin\", \"London\"] }},\n    {\"id\": 3, \"vector\": [0.36, 0.55, 0.47, 0.94], \"payload\": {\"city\": [\"Berlin\", \"Moscow\"] }},\n    {\"id\": 4, \"vector\": [0.18, 0.01, 0.85, 0.80], \"payload\": {\"city\": [\"London\", \"Moscow\"] }},\n    {\"id\": 5, \"vector\": [0.24, 0.18, 0.22, 0.44], \"payload\": {\"count\": [0]}},\n    {\"id\": 6, \"vector\": [0.35, 0.08, 0.11, 0.44]}\n]\n}'\n\n```\n\nExpected response:\n\n```\n\n{\n    \"result\": {\n        \"operation_id\": 0,\n        \"status\": \"completed\"\n    },\n    \"status\": \"ok\",\n    \"time\": 0.000206061\n}\n\n```\n\n### Search with filtering\n\nLet's start with a basic request:\n\n```\n\ncurl -L -X POST 'http://localhost:6333/collections/test_collection/points/search' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n    \"vector\": [0.2,0.1,0.9,0.7],\n    \"top\": 3\n}'\n\n```\n\nExpected response:\n\n```\n\n{\n    \"result\": [\n        { \"id\": 4, \"score\": 1.362, \"payload\": null, \"version\": 0 },\n        { \"id\": 1, \"score\": 1.273, \"payload\": null, \"version\": 0 },\n        { \"id\": 3, \"score\": 1.208, \"payload\": null, \"version\": 0 }\n    ],\n    \"status\": \"ok\",\n    \"time\": 0.000055785\n}\n\n```\n\nBut result is different if we add a filter:\n\n```\n\ncurl -L -X POST 'http://localhost:6333/collections/test_collection/points/search' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n    \"filter\": {\n        \"should\": [\n            {\n                \"key\": \"city\",\n                \"match\": {\n                    \"value\": \"London\"\n                }\n            }\n        ]\n    },\n    \"vector\": [0.2, 0.1, 0.9, 0.7],\n    \"top\": 3\n}'\n\n```\n\nExpected response:\n\n```\n\n{\n    \"result\": [\n        { \"id\": 4, \"score\": 1.362, \"payload\": null, \"version\": 0 },\n        { \"id\": 2, \"score\": 0.871, \"payload\": null, \"version\": 0 }\n    ],\n    \"status\": \"ok\",\n    \"time\": 0.000093972\n}\n\n```\n                ",
    "contact": {
      "email": "andrey@vasnetsov.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "master"
  },
  "servers": [
    {
      "url": "{protocol}://{hostname}:{port}",
      "variables": {
        "hostname": {
          "default": "localhost"
        },
        "port": {
          "default": "6333"
        },
        "protocol": {
          "default": "http",
          "enum": [
            "http",
            "https"
          ]
        }
      }
    }
  ],
  "paths": {
    "/cluster": {
      "get": {
        "tags": [
          "cluster"
        ],
        "summary": "Get cluster status info",
        "description": "Get cluster status info\n\nGet information about the current state and composition of the cluster",
        "operationId": "cluster_status",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/ClusterStatus"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "ok"
                      ]
                    },
                    "time": {
                      "type": "number",
                      "format": "float",
                      "description": "Time spent to process this request"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ClusterStatus": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "status"
            ],
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "disabled"
                ]
              }
            }
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/ClusterInfo"
              },
              {
                "type": "object",
                "required": [
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "enabled"
                    ]
                  }
                }
              }
            ]
          }
        ],
        "description": "Information about current cluster status and structure",
        "discriminator": {
          "propertyName": "status"
        }
      }
    }
  },
  "tags": [
    {
      "name": "collections",
      "description": "Searchable collections of points."
    },
    {
      "name": "points",
      "description": "Float-point vectors with payload."
    },
    {
      "name": "cluster",
      "description": "Service distributed setup"
    },
    {
      "name": "snapshots",
      "description": "Storage and collections snapshots"
    }
  ],
  "externalDocs": {
    "url": "https://solvio.tech/documentation/",
    "description": "Find out more about Solvio applications and demo"
  }
}
