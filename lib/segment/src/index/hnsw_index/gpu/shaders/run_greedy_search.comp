struct SearchRequest {
    uint id;
    uint entry;
};

layout(set = 0, binding = 0) buffer SearchRequests {
    SearchRequest data[];
} search_requests;

layout(set = 0, binding = 1) buffer SearchResults {
    uint data[];
} search_results;

void main() {
    SearchRequest search_request = search_requests.data[gl_GlobalInvocationID.y];

    set_vector_storage_target(search_request.id);
    float entry_score = similarity(search_request.entry);
    ScoredPoint result = greedy_search(search_request.id, ScoredPoint(search_request.entry, entry_score));

    if (gl_GlobalInvocationID.x == 0) {
        search_results.data[gl_GlobalInvocationID.y] = result.id;
    }
}
