#ifndef VECTOR_STORAGE_F16_HEADER
#define VECTOR_STORAGE_F16_HEADER

#define VECTOR_STORAGE_ELEMENT_SIZE 2
#define VECTOR_STORAGE_ELEMENT_TYPE f16vec2
#define VECTOR_STORAGE_SCORE_TYPE float
#define VECTOR_STORAGE_ZERO_SCORE 0
#define VECTOR_STORAGE_POSTPROCESS_SCORE(RESULT) RESULT

#ifdef COSINE_DISTANCE
#define VECTOR_STORAGE_SCORE_ELEMENT(a, b) dot(a, b)
#endif

#ifdef DOT_DISTANCE
#define VECTOR_STORAGE_SCORE_ELEMENT(a, b) dot(a, b)
#endif

#ifdef EUCLID_DISTANCE
float euclid_metric_f16(VECTOR_STORAGE_ELEMENT_TYPE v1, VECTOR_STORAGE_ELEMENT_TYPE v2) {
    VECTOR_STORAGE_ELEMENT_TYPE v = v1 - v2;
    return float(-v.x * v.x - v.y * v.y);
}
#define VECTOR_STORAGE_SCORE_ELEMENT(a, b) euclid_metric_f16(a, b)
#endif

#ifdef MANHATTAN_DISTANCE
float manhattan_metric_f16(VECTOR_STORAGE_ELEMENT_TYPE v1, VECTOR_STORAGE_ELEMENT_TYPE v2) {
    VECTOR_STORAGE_ELEMENT_TYPE v = abs(v1 - v2);
    return float(-v.x - v.y);
}
#define VECTOR_STORAGE_SCORE_ELEMENT(a, b) manhattan_metric_f16(a, b)
#endif

#endif
