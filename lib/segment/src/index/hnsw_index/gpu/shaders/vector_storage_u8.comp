#ifndef VECTOR_STORAGE_U8_HEADER
#define VECTOR_STORAGE_U8_HEADER

#define VECTOR_STORAGE_ELEMENT_SIZE 4
#define VECTOR_STORAGE_ELEMENT_TYPE u8vec4

#ifdef COSINE_DISTANCE

#define VECTOR_STORAGE_SCORE_TYPE uvec3
#define VECTOR_STORAGE_ZERO_SCORE uvec3(0, 0, 0)

VECTOR_STORAGE_SCORE_TYPE dot_u8vec4(
    VECTOR_STORAGE_ELEMENT_TYPE a,
    VECTOR_STORAGE_ELEMENT_TYPE b
) {
    uvec4 square1 = uvec4(a) * uvec4(a);
    uint vector1Len = square1.x + square1.y + square1.z + square1.w;

    uvec4 square2 = uvec4(b) * uvec4(b);
    uint vector2Len = square2.x + square2.y + square2.z + square2.w;

    uvec4 mul = uvec4(a) * uvec4(b);
    uint dot = mul.x + mul.y + mul.z + mul.w;
    return uvec3(dot, vector1Len, vector2Len);
}

#define VECTOR_STORAGE_SCORE_ELEMENT(a, b) dot_u8vec4(a, b)

float u8_postprocess_cosine_score(VECTOR_STORAGE_SCORE_TYPE result) {
    if (result.y > 0 && result.z > 0) {
        return float(result.x) / sqrt(float(result.y) * float(result.z));
    } else {
        return 0;
    }
}

#define VECTOR_STORAGE_POSTPROCESS_SCORE(RESULT) u8_postprocess_cosine_score(RESULT)

#else

#define VECTOR_STORAGE_SCORE_TYPE uint
#define VECTOR_STORAGE_ZERO_SCORE 0

#endif

#ifdef DOT_DISTANCE

uint dot_u8vec4(u8vec4 a, u8vec4 b) {
    uvec4 mul = uvec4(a) * uvec4(b);
    return mul.x + mul.y + mul.z + mul.w;
}

#define VECTOR_STORAGE_SCORE_ELEMENT(a, b) dot_u8vec4(a, b)

#define VECTOR_STORAGE_POSTPROCESS_SCORE(RESULT) float(RESULT)

#endif

#ifdef EUCLID_DISTANCE

uint euclid_u8vec4(u8vec4 v1, u8vec4 v2) {
    ivec4 v = ivec4(v1) - ivec4(v2);
    return uint(v.x * v.x + v.y * v.y + v.z * v.z + v.w * v.w);
}
#define VECTOR_STORAGE_SCORE_ELEMENT(a, b) euclid_u8vec4(a, b)
#define VECTOR_STORAGE_POSTPROCESS_SCORE(RESULT) -float(RESULT)

#endif

#ifdef MANHATTAN_DISTANCE
uint manhattan_u8vec4(u8vec4 v1, u8vec4 v2) {
    ivec4 v = abs(ivec4(v1) - ivec4(v2));
    return uint(v.x + v.y + v.z + v.w);
}

#define VECTOR_STORAGE_SCORE_ELEMENT(a, b) manhattan_u8vec4(a, b)
#define VECTOR_STORAGE_POSTPROCESS_SCORE(RESULT) -float(RESULT)

#endif

#endif
