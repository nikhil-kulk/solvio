openapi: 3.0.1
info:
  title: Solvio API
  description: "API description for Solvio vector search engine. Describes CRUD and search operations on collections of points (vectors with payload)."
  contact:
    email: andrey@vasnetsov.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.1.0
externalDocs:
  description: Find out more about Solvio
  url: https://github.com/generall/solvio
servers:
  - url: http://localhost:6333
tags:
  - name: collections
    description: Searchable collections of points.
  - name: points
    description: Float-point vectors with payload.

paths:
  /collections:
    get:
      tags:
        - collections
      summary: Get list of existing collections
      operationId: get_collections
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  time:
                    type: number
                    format: float
                    description: Time spent to process this request
                  status:
                    type: string
                    enum: ["ok"]
                  result:
                    $ref: "./models.json#/components/schemas/CollectionsResponse"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    post:
      tags:
        - collections
      summary: Perform update operation on collections
      operationId: update_collections
      requestBody:
        description: Operation to perform on collections
        content:
          application/json:
            schema:
              $ref: "./models.json#/components/schemas/StorageOps"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  time:
                    type: number
                    format: float
                    description: Time spent to process this request
                  status:
                    type: string
                    enum: ["ok"]
                  result:
                    type: boolean
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /collections/{name}:
    get:
      tags:
        - collections
      summary: Get information about existing collection
      operationId: get_collection
      parameters:
        - name: name
          in: path
          description: Name of the collection to retrieve
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  time:
                    type: number
                    format: float
                    description: Time spent to process this request
                  status:
                    type: string
                    enum: ["ok"]
                  result:
                    $ref: "./models.json#/components/schemas/CollectionInfo"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    post:
      tags:
        - points
      summary: Update points in collection
      operationId: update_points
      requestBody:
        description: Points update operations
        content:
          application/json:
            schema:
              $ref: "./models.json#/components/schemas/CollectionUpdateOperations"

      parameters:
        - name: name
          in: path
          description: Name of the collection to search in
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  time:
                    type: number
                    format: float
                    description: Time spent to process this request
                  status:
                    type: string
                    enum: [ "ok" ]
                  result:
                    $ref: "./models.json#/components/schemas/UpdateResult"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"


  /collections/{name}/points/{id}:
    get:
      tags:
        - points
      summary: Retrieve point by id
      operationId: get_point
      parameters:
        - name: name
          in: path
          description: Name of the collection to retrieve from
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Id of the point
          required: true
          schema:
            type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  time:
                    type: number
                    format: float
                    description: Time spent to process this request
                  status:
                    type: string
                    enum: ["ok"]
                  result:
                    $ref: "./models.json#/components/schemas/Record"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /collections/{name}/points:
    post:
      tags:
        - points
      summary: Retrieve points by ids
      operationId: get_points
      requestBody:
        description: List of points to retrieve
        content:
          application/json:
            schema:
              $ref: "./models.json#/components/schemas/PointRequest"

      parameters:
        - name: name
          in: path
          description: Name of the collection to retrieve from
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  time:
                    type: number
                    format: float
                    description: Time spent to process this request
                  status:
                    type: string
                    enum: ["ok"]
                  result:
                    type: array
                    items:
                      $ref: "./models.json#/components/schemas/Record"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /collections/{name}/points/search:
    post:
      tags:
        - points
      summary: Search points
      operationId: search_points
      requestBody:
        description: Search request with optional filtering
        content:
          application/json:
            schema:
              $ref: "./models.json#/components/schemas/SearchRequest"

      parameters:
        - name: name
          in: path
          description: Name of the collection to search in
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  time:
                    type: number
                    format: float
                    description: Time spent to process this request
                  status:
                    type: string
                    enum: ["ok"]
                  result:
                    type: array
                    items:
                      $ref: "./models.json#/components/schemas/ScoredPoint"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        time:
          type: number
          format: float
          description: Time spent to process this request
        status:
          type: object
          properties:
            error:
              type: string
              description: Description of the occurred error.
        result:
          type: object
          nullable: true

